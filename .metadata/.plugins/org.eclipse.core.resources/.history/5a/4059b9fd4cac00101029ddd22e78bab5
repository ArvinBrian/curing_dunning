import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.curingdunning.entity.Otp;
import com.example.curingdunning.repository.OtpRepository;

@Service
public class OtpService {

    @Autowired
    private OtpRepository otpRepository;

    public Otp generateOtp(String email) {
        Otp otp = new Otp();
        otp.setEmail(email);
        otp.setCode(String.valueOf((int)(100000 + Math.random() * 900000))); // 6-digit OTP
        otp.setExpiry(LocalDateTime.now().plusMinutes(5));
        otp.setUsed(false);
        return otpRepository.save(otp);
    }

    public boolean verifyOtp(String email, String code) {
        Optional<Otp> otpOpt = otpRepository.findByEmailAndCodeAndUsedFalse(email, code);

        if (otpOpt.isPresent()) {
            Otp otp = otpOpt.get();
            if (otp.getExpiry().isAfter(LocalDateTime.now())) {
                otp.setUsed(true);
                otpRepository.save(otp);
                return true;
            }
        }
        return false;
    }
}
